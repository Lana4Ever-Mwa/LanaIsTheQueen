local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local shootingEnabled = true  -- Shooting is enabled by default
local radius = 80  -- Radius for detecting players

-- Function to create a circle UI
local function createCircle()
    local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    local circle = Instance.new("Frame", screenGui)
    
    circle.Size = UDim2.new(0, 150, 0, 150)  -- Size of the circle
    circle.Position = UDim2.new(0.5, 100, 0.5, 100)  -- Centered
    circle.BackgroundTransparency = 1  -- Fully transparent background
    circle.BorderSizePixel = 0

    local uiStroke = Instance.new("UIStroke", circle)
    uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    uiStroke.Color = Color3.fromRGB(135, 206, 250)  -- Sky blue color
    uiStroke.Thickness = 2  -- Thickness of the outline

    return circle
end

-- Function to check if a player is within the circle
local function isPlayerInCircle(player, center, radius)
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local headPosition = character.HumanoidRootPart.Position
        local distance = (headPosition - center).magnitude
        return distance <= radius
    end
    return false
end

-- Function to shoot at nearby players
local function shootNearbyPlayers()
    if not shootingEnabled then return end

    local center = LocalPlayer.Character.HumanoidRootPart.Position
    for _, player in Players:GetPlayers() do
        if player ~= LocalPlayer and isPlayerInCircle(player, center, radius) then
            print("Guaranteed hit on", player.Name)  -- Replace this with your shooting logic
        end
    end
end

-- Create the circle
local circle = createCircle()

-- Automatically shoot nearby players when the script runs
shootNearbyPlayers()

-- Connect the touch input to toggle shooting
circle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        shootingEnabled = not shootingEnabled  -- Toggle shooting
        if shootingEnabled then
            shootNearbyPlayers()  -- Shoot if enabled
        end
    end
end)
