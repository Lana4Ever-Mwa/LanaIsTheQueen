local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local shootingEnabled = true  -- Toggle variable to enable/disable shooting

local function createCircle()
    -- Create a ScreenGui
    local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))

    -- Create a Frame for the outline
    local circle = Instance.new("Frame", screenGui)
    circle.Size = UDim2.new(0, 240, 0, 240)  -- Size of the circle (diameter 240 pixels)
    circle.Position = UDim2.new(0.5, -120, 0.5, -120)  -- Adjusted to position the circle higher
    circle.BackgroundTransparency = 1  -- Fully transparent background
    circle.BorderSizePixel = 0  -- No border initially
    circle.ClipsDescendants = true  -- Clip anything that goes outside the frame

    -- Create a UICorner for rounded edges
    local uiCorner = Instance.new("UICorner", circle)
    uiCorner.CornerRadius = UDim.new(0.5, 0)  -- Make it a circle

    -- Create an outline using a UIStroke
    local uiStroke = Instance.new("UIStroke", circle)
    uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border  -- Apply the stroke to the border
    uiStroke.Color = Color3.fromRGB(135, 206, 250)  -- Sky blue color for the outline
    uiStroke.Thickness = 2  -- Thickness of the outline set to 2

    return circle
end

local function isPlayerInCircle(player, center, radius)
    local character = player.Character
    if character then
        local head = character:FindFirstChild("Head")
        if head then
            local headPosition = head.Position
            local distance = (headPosition - center).magnitude
            return distance <= radius
        end
    end
    return false
end

local function shootAt(player)
    -- Your shooting logic here
    print("Guaranteed hit on", player.Name)
end

local function shootNearbyPlayers(radius)
    local center = LocalPlayer.Character.HumanoidRootPart.Position  -- Use player's position
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isPlayerInCircle(player, center, radius) then
            shootAt(player)  -- Automatically "hit" every player in the circle
        end
    end
end

-- Create an outline circle in the middle of the screen
local circle = createCircle()

-- Function to toggle shooting on and off
local function toggleShooting()
    shootingEnabled = not shootingEnabled  -- Toggle the boolean value
    print("Shooting enabled:", shootingEnabled)
    
    if shootingEnabled then
        shootNearbyPlayers(80)  -- Shoot if enabled
    end
end

-- Connect the toggle function to touch input
local UserInputService = game:GetService("UserInputService")

-- Create a button for mobile touch input
local touchButton = Instance.new("TextButton", circle)
touchButton.Size = UDim2.new(1, 0, 1, 0)  -- Full size of the circle
touchButton.BackgroundTransparency = 1  -- Make button invisible
touchButton.Text = ""  -- No text

touchButton.MouseButton1Click:Connect(function()
    toggleShooting()  -- Toggle shooting on button press
end)

-- Alternatively, for touch events, use this
UserInputService.TouchTap:Connect(function(touch)
    local touchPosition = touch.Position
    -- Check if the touch is within the circle's bounds
    if (touchPosition.X >= circle.Position.X.Offset) and (touchPosition.X <= circle.Position.X.Offset + circle.Size.X.Offset) and
       (touchPosition.Y >= circle.Position.Y.Offset) and (touchPosition.Y <= circle.Position.Y.Offset + circle.Size.Y.Offset) then
        toggleShooting()
    end
end)
