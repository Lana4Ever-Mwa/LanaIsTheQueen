local resolverEnabled = false
local player = game.Players.LocalPlayer
local enemyCharacter = nil -- Reference to the enemy player

-- Function to toggle the resolver
local function toggleResolver()
    resolverEnabled = not resolverEnabled
    if resolverEnabled then
        print("Resolver Enabled")
    else
        print("Resolver Disabled")
    end
end

-- Function to check for anti-lock (pseudo-logic)
local function checkForAntiLock()
    if enemyCharacter then
        local enemyHumanoid = enemyCharacter:FindFirstChildOfClass("Humanoid")
        -- Implement your logic to detect anti-lock
    end
    return false
end

-- Function to redirect the screen when anti-lock is detected
local function redirectOnAntiLock()
    while resolverEnabled do
        if checkForAntiLock() then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(0, 50, 0)) -- Move player up
            print("Redirecting due to anti-lock")
        end
        wait(0.1) -- Adjust frequency of checks
    end
end

-- Create a UI Button
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 120, 0, 60)  -- Increased size slightly
ToggleButton.Position = UDim2.new(0.5, -60, 0.5, -30)  -- Adjusted position accordingly
ToggleButton.Text = "Toggle Resolver"

-- Button drag functionality
local dragging = false
local dragInput, startPos, startSize

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        startPos = input.Position
        startSize = ToggleButton.Position

        input.Changed:Connect(function()
            if dragging then
                local delta = input.Position - startPos
                ToggleButton.Position = UDim2.new(startSize.X.Scale, startSize.X.Offset + delta.X, startSize.Y.Scale, startSize.Y.Offset + delta.Y)
            end
        end)
    end
end)

ToggleButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Connect the button to the toggle function
ToggleButton.MouseButton1Click:Connect(function()
    toggleResolver()
    if resolverEnabled then
        redirectOnAntiLock()
    end
end)

-- Update button appearance based on resolver state
local function updateButtonAppearance()
    if resolverEnabled then
        ToggleButton.BackgroundColor3 = Color3.new(0, 1, 0) -- Green
        ToggleButton.Text = "Disable Resolver"
    else
        ToggleButton.BackgroundColor3 = Color3.new(1, 0, 0) -- Red
        ToggleButton.Text = "Enable Resolver"
    end
end

-- Update appearance when toggled
ToggleButton.MouseButton1Click:Connect(updateButtonAppearance)

-- Initial button appearance update
updateButtonAppearance()
