local resolverEnabled = false
local player = game.Players.LocalPlayer
local enemyCharacter = nil -- Reference to the enemy player

-- Function to toggle the resolver
local function toggleResolver()
    resolverEnabled = not resolverEnabled
    if resolverEnabled then
        print("Resolver Enabled")
    else
        print("Resolver Disabled")
    end
end

-- Function to check for anti-lock (pseudo-logic)
local function checkForAntiLock()
    if enemyCharacter then
        local enemyHumanoid = enemyCharacter:FindFirstChildOfClass("Humanoid")
        -- Implement your logic to detect anti-lock
    end
    return false
end

-- Function to redirect the player's view to the center when anti-lock is detected
local function redirectOnAntiLock()
    while resolverEnabled do
        if checkForAntiLock() then
            -- Redirect view to the center
            local camera = game.Workspace.CurrentCamera
            camera.CFrame = CFrame.new(0, 0, 0) -- Center the camera position; adjust as needed
            print("Redirecting to center due to anti-lock")
        end
        wait(0.1) -- Adjust frequency of checks
    end
end

-- Create a UI Screen
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ResolverGui"
ScreenGui.Parent = game.CoreGui

-- Create a Background Frame
local BackgroundFrame = Instance.new("Frame")
BackgroundFrame.Size = UDim2.new(0, 200, 0, 100)
BackgroundFrame.Position = UDim2.new(0, 10, 0, 126) -- Adjusted position
BackgroundFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1) -- Dark background
BackgroundFrame.BorderSizePixel = 0
BackgroundFrame.BackgroundTransparency = 0.3
BackgroundFrame.Parent = ScreenGui

-- Create a UI Button with enhanced appearance
local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = BackgroundFrame
ToggleButton.Size = UDim2.new(0, 180, 0, 50)
ToggleButton.Position = UDim2.new(0, 10, 0, 25) -- Centered in the background frame
ToggleButton.Text = "Toggle Resolver"
ToggleButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.8) -- Initial color
ToggleButton.BorderSizePixel = 2
ToggleButton.BorderColor3 = Color3.new(0.5, 0.5, 0.5) -- Grey border
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextColor3 = Color3.new(1, 1, 1) -- White text
ToggleButton.TextScaled = true

-- Frame drag functionality
local dragging = false
local dragInput, startPos

BackgroundFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        startPos = input.Position

        input.Changed:Connect(function()
            if dragging then
                local delta = input.Position - startPos
                BackgroundFrame.Position = BackgroundFrame.Position + UDim2.new(0, delta.X, 0, delta.Y)
            end
        end)
    end
end)

BackgroundFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Connect the button to the toggle function
ToggleButton.MouseButton1Click:Connect(function()
    toggleResolver()
    if resolverEnabled then
        redirectOnAntiLock()
    end
end)

-- Update button appearance based on resolver state
local function updateButtonAppearance()
    if resolverEnabled then
        ToggleButton.BackgroundColor3 = Color3.new(0.53, 0.81, 0.98) -- Sky Blue
        ToggleButton.Text = "Disable Resolver"
    else
        ToggleButton.BackgroundColor3 = Color3.new(1, 0.75, 0.8) -- Sky Pink
        ToggleButton.Text = "Enable Resolver"
    end
end

-- Update appearance when toggled
ToggleButton.MouseButton1Click:Connect(updateButtonAppearance)

-- Initial button appearance update
updateButtonAppearance()
